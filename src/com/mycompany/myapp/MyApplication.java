package com.mycompany.myapp;


import Entities.Gender;
import Entities.User;
import GUI.Login;
import GUI.ProfileView;
import com.codename1.db.Cursor;
import com.codename1.db.Database;
import com.codename1.db.Row;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.l10n.SimpleDateFormat;
import com.codename1.notifications.LocalNotification;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    public static Resources theme;
    public static int Connected ; 
    

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }

      
          try {
            Database database = Database.openOrCreate("tcls");
            Cursor c = database.executeQuery("select * from members");
            c.next();
            Row r = c.getRow();
              System.out.println(r.getString(9));
           Connected = r.getInteger(9); 

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if (Connected==0)
        {Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hi World"));
        Login l = new Login(hi.getClass()) ; 
        l.show();
        
    }
        else
        {
            ProfileView p = new ProfileView(new Login(new Form().getClass()).Login) {
                @Override
                protected void showOtherForm(Resources res) {

                }
            } ; 
            p.getContainer().show(); 
    }}

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
